<?xml version="1.0"?>
<machine>
<environment name="">
    <!-- os packages
    <include name="thing" system="dnf" />
    <include name="thing" system="apt" />
    -->
    <include name="firewalld" system="dnf" />
    <include name="firewalld" system="apt" />

    <!-- python packages -->

    <!-- linux_x86_64 
        x86_64 
        linux_amd64 
        linux_arm
    -->
    <!-- dl and install -->
    <include name="consul"
            system="linux_amd64"
            url="https://releases.hashicorp.com/consul/1.0.1/consul_1.0.1_linux_amd64.zip"
            command="copy install nodir"
            file="consul" />

    <include name="nomad"
            system="linux_amd64"
            url="https://releases.hashicorp.com/nomad/0.7.0/nomad_0.7.0_linux_amd64.zip"
            command="copy install nodir"
            file="nomad" />

    <include name="consul"
            system="linux_arm"
            url="https://releases.hashicorp.com/consul/1.0.1/consul_1.0.1_linux_arm.zip"
            command="copy install nodir"
            file="consul" />

    <include name="nomad"
            system="linux_arm"
            url="https://releases.hashicorp.com/nomad/0.7.0/nomad_0.7.0_linux_arm.zip"
            command="copy install nodir"
            file="nomad" />

    <!-- append files with something like 
        include system="raw" -->

    <!-- configure -bind from xml?
         no bind for non networked -> 127.0.0.1
         pass interface as env var or nothing for localhost
        interface:enp0s25
        interface:localhost
        
        envgen -a -interface:enp0s25
        [or none if not passed]
        envgen -a environment.xml enp0s25
        would be switches.arg1

        should be doable in one command
        -->
    <script name = "nomad.service" interface="localhost">
        [Unit]
        Description=generic template for nomad
        After=multi-user.target

        [Service]
        Type=simple

        ExecStart=/bin/sh -c "nomad agent -server -bootstrap-expect=1 -config=/usr/local/etc/nomad_config.hcl -bind='{{ GetInterfaceIP \"$(interface)\" }}'"
        ExecReload=/bin/kill -HUP $MAINPID
        Restart=on-failure
        StandardOutput=journal
        LimitNOFILE=65536

        [Install]
        WantedBy=multi-user.target
    </script>

    <script name = "consul.service" interface="localhost">
        [Unit]
        Description=generic template for consul
        After=multi-user.target

        [Service]
        Type=simple

        ExecStart=/bin/sh -c "consul agent -server  -bootstrap-expect=1 -data-dir=/tmp -bind='{{ GetInterfaceIP \"$(interface)\" }}'"
        ExecReload=/bin/kill -HUP $MAINPID
        Restart=on-failure
        StandardOutput=journal
        LimitNOFILE=65536

        [Install]
        WantedBy=multi-user.target
    </script>

    <script name = "start-machinic-services.sh">
        #!/bin/bash
        echo "configuring systemd services for"
        echo "consul and nomad"

        sudo mkdir /var/lib/nomad/data/ -p
        sudo sudo cp nomad_config.hcl /usr/local/etc/
        sudo cp nomad.service /etc/systemd/system/
        sudo cp consul.service /etc/systemd/system/
        sudo systemctl daemon-reload
        sudo systemctl enable consul
        sudo systemctl enable nomad
        sudo systemctl start consul
        sudo systemctl start nomad
    </script>

    <script name = "start-machinic-session.sh">
        #!/bin/bash
        echo "consul and nomad will run in background"
        echo "but will not be configured as service"

        sudo mkdir /var/lib/nomad/data/ -p
        sudo sudo cp nomad_config.hcl /usr/local/etc/
        consul agent -dev  &amp;
        sudo /usr/local/bin/nomad agent -server -dev -config=/usr/local/etc/nomad_config.hcl -bind=$(interface) &amp;
    </script>

    <script name = "machinic-firewall.sh">
        #!/bin/bash
        usage="
        Usage:
            ./machinic-firewall.sh [interface]

        Example:
            ./machinic-firewall.sh enp0s25

        Notes:
            'ifconfig' lists interfaces
            wireless interfaces prefixed with a 'w'
            wired interfaces with an 'e'

        TODO:
            Drop all incoming rule may need to change
            or be modified for consul gossip and zyre protocols...
        "
        # show usage string if no args
        : ${1?"$usage"}
        interface=$1

        #debian based
        sudo apt-get install firewalld
        #fedora
        sudo dnf install firewalld

        #following commands work for either system:

        #set default zone to 'drop'
        sudo firewall-cmd --permanent --set-default-zone=drop

        #set network interface fro drop zone

        sudo firewall-cmd --permanent --zone=drop --change-interface=$interface

        #add rule

        sudo firewall-cmd --zone=drop  --add-rich-rule='rule family="ipv4" source address="192.168.0.0/24" accept'

        #to remove rule:
        #sudo firewall-cmd --zone=drop  --remove-rich-rule='rule family="ipv4" source address="192.168.0.0/24" accept'
    </script>

    <script name = "nomad_config.hcl">
        log_level = "DEBUG"
        #data_dir = "/home/$USER/.local/nomad_data"
        data_dir = "/var/lib/nomad/data"
        enable_debug = true
        name = "client1"
        server {
          enabled          = true
          bootstrap_expect = 1
        }
        client {
            enabled = true
            options {
                "driver.raw_exec.enable" = "1"
            }
        }
    </script>

</environment>
</machine>